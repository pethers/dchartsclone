<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.dussan.vaadin</groupId>
	<artifactId>dcharts</artifactId>
	<packaging>jar</packaging>
	<version>1.7.2-SNAPSHOT</version>
	<name>dCharts Widget</name>
	<prerequisites>
       		<maven>3.3.3</maven>
     	</prerequisites>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<!-- general -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.source>1.8</jdk.source>
		<jdk.target>1.8</jdk.target>
		<!-- ftp server -->
		<ftp.server.id>ftp.dussan.org</ftp.server.id>
		<ftp.server.url>ftp://${ftp.server.id}</ftp.server.url>
		<!-- git version -->
		<get.gitversion>${basedir}/get.gitversion</get.gitversion>
		<gitversion>${basedir}/.gitversion</gitversion>
		<!-- MANIFEST.MF -->
		<Implementation-Title>${project.name}</Implementation-Title>
		<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
		<Implementation-Version>${project.version}</Implementation-Version>
		<Vaadin-License-Title>Apache License 2.0</Vaadin-License-Title>
		<Vaadin-Package-Version>1</Vaadin-Package-Version>
		<Vaadin-Widgetsets>org.dussan.vaadin.dcharts.DchartsWidgetset</Vaadin-Widgetsets>
		<Vaadin-Addon>${project.artifactId}-${project.version}/${project.artifactId}-${project.version}.jar</Vaadin-Addon>
		<JqPlot-Version>1.0.9.d96a669</JqPlot-Version>
		<!-- com.google -->
		<com.google.code.maven-license-plugin.maven-license-plugin>1.4.0</com.google.code.maven-license-plugin.maven-license-plugin>
		<!-- com.vaadin -->
		<com.vaadin.vaadin>8.0.5</com.vaadin.vaadin>
		<!-- commons -->
		<commons-codec.commons-codec>1.10</commons-codec.commons-codec>
		<!-- javax -->
		<javax.servlet.servlet-api>3.1.0</javax.servlet.servlet-api>
		<javax.validation.validation-api>1.0.0.GA</javax.validation.validation-api>
		<!-- org.apache -->
		<org.apache.commons.commons-lang3>3.4</org.apache.commons.commons-lang3>
		<org.apache.maven.plugins.maven-antrun-plugin>1.8</org.apache.maven.plugins.maven-antrun-plugin>
		<org.apache.maven.plugins.maven-assembly-plugin>2.6</org.apache.maven.plugins.maven-assembly-plugin>
		<org.apache.maven.plugins.maven-clean-plugin>3.0.0</org.apache.maven.plugins.maven-clean-plugin>
		<org.apache.maven.plugins.maven-compiler-plugin>3.5.1</org.apache.maven.plugins.maven-compiler-plugin>
		<org.apache.maven.plugins.maven-jar-plugin>3.0.2</org.apache.maven.plugins.maven-jar-plugin>
		<org.apache.maven.wagon.wagon-ftp>2.10</org.apache.maven.wagon.wagon-ftp>
		<!-- org.codehaus.mojo -->
		<org.codehaus.mojo.exec-maven-plugin>1.5.0</org.codehaus.mojo.exec-maven-plugin>
		<org.codehaus.mojo.gmaven-plugin>1.5</org.codehaus.mojo.gmaven-plugin>
		<org.codehaus.mojo.properties-maven-plugin>1.0.0</org.codehaus.mojo.properties-maven-plugin>
		<org.codehaus.mojo.wagon-maven-plugin>1.0</org.codehaus.mojo.wagon-maven-plugin>
		<!-- org.mortbay.jetty -->
		<org.mortbay.jetty.maven-jetty-plugin>6.1.26</org.mortbay.jetty.maven-jetty-plugin>
	</properties>

	<repositories>
		<repository>
			<id>Dussan.org-central-repos</id>
			<url>http://repos.dussan.org/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>Dussan.org-vaadin-addons</id>
			<url>http://repos.dussan.org/content/repositories/vaadin-addons/</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>Dussan.org-plugin-repos</id>
			<url>http://repos.dussan.org/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
		  <groupId>com.vaadin</groupId>
		  <artifactId>vaadin-compatibility-server</artifactId>
		  <version>${com.vaadin.vaadin}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
			<version>${com.vaadin.vaadin}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<version>${com.vaadin.vaadin}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			<version>${com.vaadin.vaadin}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${javax.validation.validation-api}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${javax.validation.validation-api}</version>
			<classifier>sources</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${org.apache.commons.commons-lang3}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.commons-codec}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet.servlet-api}</version>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.gwt/gwt-user -->
		<dependency>
		    <groupId>com.google.gwt</groupId>
		    <artifactId>gwt-user</artifactId>
		    <version>2.8.1</version>
		    <scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.gwt/gwt-user -->
		<dependency>
		    <groupId>com.google.gwt</groupId>
		    <artifactId>gwt-dev</artifactId>
		    <version>2.8.1</version>
		    <scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}-${project.version}-${git.version}</finalName>
		<outputDirectory>${project.build.directory}/${project.artifactId}/WEB-INF/classes</outputDirectory>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>${org.apache.maven.wagon.wagon-ftp}</version>
			</extension>
		</extensions>

		<plugins>
			<!-- 
			<plugin>
    			<groupId>org.codehaus.gmaven</groupId>
    			<artifactId>gmaven-plugin</artifactId>
				<version>${org.codehaus.mojo.gmaven-plugin}</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								import java.util.Date
								import java.text.MessageFormat
								def
								copyright = "2012"
								def currentyear =
								MessageFormat.format("{0,date,yyyy}", new Date())
								if( copyright
								!= currentyear ) {
								copyright += "-" + currentyear
								}
								project.properties['copyright'] =
								copyright
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
		-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${org.codehaus.mojo.exec-maven-plugin}</version>
				<executions>
					<execution>
						<id>git-version</id>
						<phase>compile</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${get.gitversion}</executable>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>${org.codehaus.mojo.properties-maven-plugin}</version>
				<executions>
					<execution>
						<id>git-version</id>
						<phase>compile</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${gitversion}</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${org.apache.maven.plugins.maven-antrun-plugin}</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<configuration>
							<target>
								<delete file="${gitversion}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- Copy web.xml to build directory if want to run application in hosted
						mode -->
					<execution>
						<id>xmlCopy</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<copy file="${basedir}/src/main/webapp/WEB-INF/web.xml"
									toFile="${project.build.directory}/${project.artifactId}/WEB-INF/web.xml" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.google.code.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>${com.google.code.maven-license-plugin.maven-license-plugin}</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<header>${basedir}/src/main/resources/license_header.txt</header>
					<encoding>${project.build.sourceEncoding}</encoding>
					<quiet>true</quiet>
					<includes>
						<include>src/main/assembly/**</include>
						<include>src/main/java/**</include>
						<include>src/main/webapp/**</include>
					</includes>
					<excludes>
						<exclude>src/main/webapp/VAADIN/**</exclude>
						<exclude>target/**</exclude>
						<exclude>**/*.js</exclude>
					</excludes>
					<useDefaultExcludes>true</useDefaultExcludes>
					<useDefaultMapping>true</useDefaultMapping>
					<properties>
						<owner>${project.organization.name}</owner>
						<year>${copyright}</year>
						<email>vaadin@dussan.org</email>
					</properties>
				</configuration>
			</plugin>

			<!-- Compiler plugin enforces Java 1.6 compatibility -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${org.apache.maven.plugins.maven-compiler-plugin}</version>
				<configuration>
					<source>${jdk.source}</source>
					<target>${jdk.target}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${org.apache.maven.plugins.maven-jar-plugin}</version>
				<configuration>
					<excludes>
						<exclude>**/org/dussan/vaadin/dcharts/test/**</exclude>
					</excludes>
					<archive>
						<index>true</index>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<addClasspath>true</addClasspath>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Vaadin-Package-Version>${Vaadin-Package-Version}</Vaadin-Package-Version>
							<!-- Comma-separated list of widgetsets in the package -->
							<Vaadin-Widgetsets>${Vaadin-Widgetsets}</Vaadin-Widgetsets>
							<Git-Version>${git.version}</Git-Version>
							<JqPlot-Version>${JqPlot-Version}</JqPlot-Version>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
			<!-- directory is cleaned properly -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${org.apache.maven.plugins.maven-clean-plugin}</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/gwt-unitCache</directory>
						</fileset>
						<fileset>
							<directory>src/main/webapp/VAADIN</directory>
						</fileset>
						<fileset>
							<directory>src/main/webapp/org.dussan.vaadin.dcharts.DchartsWidgetset</directory>
						</fileset>
						<fileset>
							<directory>src/main/webapp/WEB-INF/deploy</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${com.vaadin.vaadin}</version>
				<executions>
					<execution>
						<configuration>
							<validateOnly>false</validateOnly>
						</configuration>
						<goals>
							<goal>compile</goal>
							<goal>resources</goal>
							<goal>update-widgetset</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- A simple Jetty test server at http://localhost:8080/dcharts can be
				launched with the Maven goal jetty:run and stopped with jetty:stop -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>${org.mortbay.jetty.maven-jetty-plugin}</version>
				<configuration>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>28080</port>
						</connector>
					</connectors>
					<stopPort>9966</stopPort>
					<stopKey>${project.artifactId}</stopKey>
					<!-- Redeploy every x seconds if changes are detected, 0 for no automatic
						redeployment -->
					<scanIntervalSeconds>1</scanIntervalSeconds>
					<!-- make sure Jetty also finds the widgetset -->
					<webAppConfig>
						<contextPath>/${project.artifactId}</contextPath>
						<baseResource implementation="org.mortbay.resource.ResourceCollection">
							<!-- Workaround for Maven/Jetty issue http://jira.codehaus.org/browse/JETTY-680 -->
							<!-- <resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources> -->
							<resourcesAsCSV>src/main/webapp</resourcesAsCSV>
						</baseResource>
					</webAppConfig>
				</configuration>
			</plugin>
		</plugins>

		<!-- This is needed for the sources required by the GWT compiler to be
			included in the produced JARs -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>

			<resource>
				<directory>src/main/resources</directory>
				<targetPath>META-INF</targetPath>
				<filtering>true</filtering>
				<includes>
					<include>NOTICE.txt</include>
				</includes>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.vaadin</groupId>
					<artifactId>vaadin-maven-plugin</artifactId>
					<version>${com.vaadin.vaadin}</version>
					<configuration>
						<webappDirectory>src/main/webapp/VAADIN/widgetsets</webappDirectory>
						<hostedWebapp>src/main/webapp</hostedWebapp>
						<modules>
							<module>org.dussan.vaadin.dcharts.DchartsWidgetset</module>
						</modules>
						<extraJvmArgs>-Xmx1024M -Xss1024k -Xms1024M</extraJvmArgs>
						<runTarget>${project.artifactId}</runTarget>
						<noServer>true</noServer>
						<port>8080</port>
						<force>true</force>
						<strict>true</strict>
						<style>OBF</style>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>debug</goal>
								<goal>run</goal>
							</goals>
							<configuration>
								<goal>debug</goal>
								<goal>run</goal>
								<validateOnly>true</validateOnly>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.google.code.maven-license-plugin
										</groupId>
										<artifactId>
											maven-license-plugin
										</artifactId>
										<versionRange>
											[1.4.0]
										</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>
											vaadin-maven-plugin
										</artifactId>
										<versionRange>[7.0.3,)</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>resources</goal>
											<goal>
												update-widgetset
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.7]
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.groovy.maven
										</groupId>
										<artifactId>
											gmaven-plugin
										</artifactId>
										<versionRange>
											[1.0]
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-2]
										</versionRange>
										<goals>
											<goal>
												read-project-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.2.1]
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>deploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jboss.as.plugins</groupId>
						<artifactId>jboss-as-maven-plugin</artifactId>
						<version>${org.jboss.as.plugins.jboss-as-maven-plugin}</version>
						<executions>
							<execution>
								<id>undeploy</id>
								<phase>clean</phase>
								<goals>
									<goal>undeploy</goal>
								</goals>
								<configuration>
									<ignoreMissingDeployment>true</ignoreMissingDeployment>
								</configuration>
							</execution>
							<execution>
								<id>deploy</id>
								<phase>package</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
								<configuration>
									<force>true</force>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>prepare-package</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${org.apache.maven.plugins.maven-assembly-plugin}</version>
						<executions>
							<execution>
								<id>sources</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/sources.xml</descriptor>
									</descriptors>
									<tarLongFileMode>gnu</tarLongFileMode>
									<appendAssemblyId>false</appendAssemblyId>
									<finalName>${project.build.finalName}.sources</finalName>
								</configuration>
							</execution>
							<execution>
								<id>jar</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/jar.xml</descriptor>
									</descriptors>
									<tarLongFileMode>gnu</tarLongFileMode>
									<appendAssemblyId>false</appendAssemblyId>
									<finalName>${project.build.finalName}</finalName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>ftp-snapshots-upload</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<version>${org.codehaus.mojo.wagon-maven-plugin}</version>
						<executions>
							<execution>
								<id>upload-sources-zip</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.sources.zip</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/snapshots</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-sources-gz</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.sources.tar.gz</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/snapshots</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-sources-bz2</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.sources.tar.bz2</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/snapshots</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-zip</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.zip</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/snapshots</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-gz</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.tar.gz</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/snapshots</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-bz2</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.tar.bz2</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/snapshots</url>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>ftp-releases-upload</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<version>${org.codehaus.mojo.wagon-maven-plugin}</version>
						<executions>
							<execution>
								<id>upload-sources-zip</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.sources.zip</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/releases</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-sources-gz</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.sources.tar.gz</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/releases</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-sources-bz2</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.sources.tar.bz2</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/releases</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-zip</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.zip</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/releases</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-gz</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.tar.gz</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/releases</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-bz2</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>${ftp.server.id}</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.tar.bz2</fromFile>
									<url>${ftp.server.url}/${project.artifactId}/releases</url>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>deploy-releases</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>deploy-file</goal>
								</goals>
								<configuration>
									<repositoryId>${project.distributionManagement.repository.id}</repositoryId>
									<url>${project.distributionManagement.repository.url}</url>
									<file>${project.build.directory}/${project.build.finalName}.${project.packaging}</file>
									<packaging>${project.packaging}</packaging>
									<artifactId>${project.artifactId}</artifactId>
									<groupId>${project.groupId}</groupId>
									<version>${project.version}</version>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>deploy-snapshots</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>deploy-file</goal>
								</goals>
								<configuration>
									<repositoryId>${project.distributionManagement.snapshotRepository.id}</repositoryId>
									<url>${project.distributionManagement.snapshotRepository.url}</url>
									<file>${project.build.directory}/${project.build.finalName}.${project.packaging}</file>
									<packaging>${project.packaging}</packaging>
									<artifactId>${project.artifactId}</artifactId>
									<groupId>${project.groupId}</groupId>
									<version>${project.version}</version>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<distributionManagement>
		<repository>
			<id>repos.dussan.org</id>
			<name>releases</name>
			<url>http://repos.dussan.org/content/repositories/releases/</url>
		</repository>

		<snapshotRepository>
			<id>repos.dussan.org</id>
			<name>snapshots</name>
			<uniqueVersion>false</uniqueVersion>
			<url>http://repos.dussan.org/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<organization>
		<name>Dušan Vejnovič</name>
		<url>http://www.dussan.org</url>
	</organization>

	<ciManagement>
		<system>CI Builder</system>
		<url>http://builder.dussan.org</url>
	</ciManagement>

	<issueManagement>
		<system>Code @ dussan.org</system>
		<url>http://code.dussan.org</url>
	</issueManagement>

	<developers>
		<developer>
			<id>vaadin@dussan.org</id>
			<name>Dušan Vejnovič</name>
			<email>vaadin@dussan.org</email>
			<organization>Dussan Organization</organization>
			<organizationUrl>http://www.dussan.org</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>CET</timezone>
		</developer>
	</developers>
</project>